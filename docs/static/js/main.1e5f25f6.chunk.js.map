{"version":3,"sources":["components/CategoyApp.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoyApp","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prev","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","item","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMA6BeA,EA1BI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAexC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdtB,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,YCLdG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,yBAAKC,UAAU,wBACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAKA,K,uBCLEK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAWF,GAD5C,+DAEFG,MAAMR,GAFJ,cAEfS,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,MAAW,CAC/BC,GAAID,EAAKC,GACThB,MAAOe,EAAKf,MACZC,IAAG,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAME,OAAOC,iBAAiBjB,QAPhB,kBASdY,GATc,4CAAH,sDCGPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACd,GACtBe,YAAW,WACTH,EAAS,CAAEV,KAAMF,EAAMU,SAAS,MAC/B,UAEJ,CAACd,IAEGe,EDZ0BK,CAAapB,GAAtCc,EAD+B,EAC/BA,QAAcH,EADiB,EACtBL,KACjB,OACE,oCACE,wBAAIV,UAAU,gDAAgDI,GAC7Dc,GAAW,uBAAGlB,UAAU,qCAAb,iBACZ,yBAAKA,UAAU,mDACZe,EAAOH,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaY,IAAKZ,EAAKC,IAAQD,UES1Ba,EAjBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,cADrB,mBAClB2C,EADkB,KACN5C,EADM,KAGzB,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG4C,EAAWf,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,U,YCR5CwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1e5f25f6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoyApp = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 1) {\n      setCategories((prev) => [inputValue, ...prev]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInput} />\n    </form>\n  );\n};\n\nCategoyApp.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default CategoyApp;\n","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__fadeIn\">\n      <img src={url} alt={title}/>\n      <p>{ title }</p>\n    </div>\n  )\n}\n","\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=2LFC22cPjAEgBWlUXVXdCbAaQbORCyOL`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((item) => ({\n    id: item.id,\n    title: item.title,\n    url: item?.images.downsized_medium.url,\n  }));\n  return gifs;\n};\n","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n  const { loading, data:images } = useFetchGifs(category);\n  return (\n    <>\n      <h3 className=\"animate__animated animate__lightSpeedInRight\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__bounce\"> Cargando ...</p>}\n      <div className=\"card-grid animate__animated animate__fadeInDown\">\n        {images.map((item) => (\n          <GifGridItem key={item.id} {...item} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGif';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((resp) => {\n      setTimeout(() => {\n        setState({ data: resp, loading: false });\n      }, 3000)\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/CategoyApp';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <GifExpert />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}